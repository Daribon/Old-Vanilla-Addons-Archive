CT_RaidTracker_RaidLog = { };
CT_RaidTracker_GetCurrentRaid = nil;

-- Debug flag

CT_RaidTracker_DebugFlag = nil;

-- Debug function(s)

function CT_RaidTracker_Debug(...)
	if ( CT_RaidTracker_DebugFlag ) then
		local sDebug = "#";
		for i = 1, arg.n, 1 do
			if ( arg[i] ) then
				sDebug = sDebug .. arg[i] .. "#";
			end
		end
		DEFAULT_CHAT_FRAME:AddMessage(sDebug, 1, 0.5, 0);
	end
end
		

-- OnFoo functions

function CT_RaidTracker_OnLoad()
	-- Register events
	this:RegisterEvent("CHAT_MSG_LOOT");
	this:RegisterEvent("CHAT_MSG_SYSTEM");
	this:RegisterEvent("RAID_ROSTER_UPDATE");
end

function CT_RaidTracker_OnEvent(event)
	if ( event == "RAID_ROSTER_UPDATE" ) then
		if ( GetNumRaidMembers() == 0 ) then
			CT_RaidTracker_GetCurrentRaid = nil;
			CT_RaidTracker_Debug("Left raid.");
		elseif ( not CT_RaidTracker_GetCurrentRaid ) then
			local sDate = date();
			CT_RaidTracker_GetCurrentRaid = sDate;
			CT_RaidTracker_RaidLog[sDate] = { 
				["Loot"] = { },
				["Join"] = { },
				["Leave"] = { }
			};
			for i = 1, GetNumRaidMembers(), 1 do
				tinsert(CT_RaidTracker_RaidLog[sDate]["Join"],
					{
						["player"] = UnitName("raid" .. i),
						["time"] = sDate
					}
				);
			end
			CT_RaidTracker_Debug("Joined new raid at " .. sDate);
		end
			
	elseif ( event == "CHAT_MSG_LOOT" and CT_RaidTracker_GetCurrentRaid ) then
		local sPlayer, sLink;
		local iStart, iEnd, sPlayerName, sItem = string.find(arg1, "([^%s]+) receives loot: (.+)%.");
		if ( sPlayerName ) then
			sPlayer = sPlayerName;
			sLink = sItem;
		else
			local iStart, iEnd, sItem = string.find(arg1, "You receive loot: (.+)%.");
			if ( sItem ) then
				sPlayer = UnitName("player");
				sLink = sItem;
			end
		end

		-- Make sure there is a link
		if ( sLink and sPlayer ) then
			local sColor, sItem, sName = CT_RaidTracker_GetItemInfo(sLink);
			if ( sColor and sItem and sName ) then
				-- Insert into table
				if ( not CT_RaidTracker_RaidLog[CT_RaidTracker_GetCurrentRaid] ) then
					CT_RaidTracker_RaidLog[CT_RaidTracker_GetCurrentRaid] = { 
						["Loot"] = { },
						["Join"] = { },
						["Leave"] = { }
					};
				end
				tinsert(CT_RaidTracker_RaidLog[CT_RaidTracker_GetCurrentRaid]["Loot"],
					{
						["player"] = sPlayer,
						["item"] = {						
							["c"] = sColor,
							["id"] = sItem,
							["name"] = sName
						},
						["time"] = date()
					}
				);
				CT_RaidTracker_Debug(sPlayer, sColor, sItem, sName);
			end
		end
	elseif ( event == "CHAT_MSG_SYSTEM" and UnitName("player") and UnitName("player") ~= "Unknown Being" and CT_RaidTracker_GetCurrentRaid ) then
		local sDate = date();
		local iStart, iEnd, sPlayer = string.find(arg1, "([^%s]+) has left the raid group");
		if ( sPlayer and sPlayer ~= UnitName("player") ) then
			tinsert(CT_RaidTracker_RaidLog[CT_RaidTracker_GetCurrentRaid]["Leave"],
				{
					["player"] = sPlayer,
					["time"] = sDate
				}
			);
			CT_RaidTracker_Debug(sPlayer, "LEFT");
		end
		local iStart, iEnd, sPlayer = string.find(arg1, "([^%s]+) has joined the raid group");
		if ( sPlayer and sPlayer ~= UnitName("player") ) then
			tinsert(CT_RaidTracker_RaidLog[CT_RaidTracker_GetCurrentRaid]["Join"],
				{
					["player"] = sPlayer,
					["time"] = sDate
				}
			);
			CT_RaidTracker_Debug(sPlayer, "JOIN");
		end
	end
end

-- Item functions

function CT_RaidTracker_GetItemInfo(sItem)
	-- Thanks to Telo for the following regular expression
	local iStart, iEnd, sColor, sItemName, sName = string.find(sItem, "|c(%x+)|Hitem:(%d+:%d+:%d+:%d+)|h%[(.-)%]|h|r");
	if ( sColor and sItemName and sName ) then
		return sColor, sItemName, sName;
	end
end

SlashCmdList["RAIDTRACKER"] = function(msg)
	if ( msg == "raid" ) then
		CT_RaidTracker_Print("Logged raids:", 1, 1, 0);
		for k, v in CT_RaidTracker_RaidLog do
			CT_RaidTracker_Print(k, 1, 1, 0);
		end
		CT_RaidTracker_Print("Type /raidtracker raid <date> for more info from that raid", 1, 1, 0);
	elseif ( strsub(msg, 1, 5) == "raid " ) then
		local _, _, raid = string.find(msg, "raid (.+)");
		if ( raid and CT_RaidTracker_RaidLog[raid] ) then
			CT_RaidTracker_Print("Loot received:", 1, 1, 0);
			for k, v in CT_RaidTracker_RaidLog[raid]["Loot"] do
				CT_RaidTracker_Print("|c" .. v["item"]["c"] .. "|Hitem:" .. v["item"]["id"] .. "|h[" .. v["item"]["name"] .. "]|h|r: " .. v["player"] .. " at " .. v["time"], 1, 1, 0);
			end
		end
	end
end

SLASH_RAIDTRACKER1 = "/raidtracker";
SLASH_RAIDTRACKER2 = "/rt";

function CT_RaidTracker_Print(msg, r, g, b)
	if ( CT_Print ) then
		CT_Print(msg, r, g, b);
	else
		DEFAULT_CHAT_FRAME:AddMessage(msg, r, g, b);
	end
end

-- Grey = 9d9d9d
-- White = FFFFFF
-- Green = 1eff00
-- Blue = 0070dd
-- Purple = a335ee